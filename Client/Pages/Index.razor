@page "/"
@using VentyTime.Shared.Models
@using VentyTime.Client.Services
@using VentyTime.Client.Components
@using Microsoft.AspNetCore.Components.Authorization
@using System.Timers

@inject IEventService EventService
@inject NavigationManager NavigationManager
@inject IDialogService DialogService
@inject ISnackbar Snackbar
@inject AuthenticationStateProvider AuthenticationStateProvider

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-4">
    <!-- Event Mosaic -->
    <div class="events-calendar">
        <div class="mosaic-grid">
            @{
                var events = searchResults.Take(18).ToList();
                for (int i = 0; i < events.Count; i++)
                {
                    var evt = events[i];
                    if (i == 6) // –¢–µ–∫—Å—Ç–æ–≤–∏–π –±–ª–æ–∫ –ø—ñ—Å–ª—è 6-–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞
                    {
                        <div class="mosaic-text" @onclick="@(() => NavigationManager.NavigateTo("/events"))">
                            <div class="mosaic-text-content">
                                <span class="mosaic-text-icon">üåü</span>
                                <MudText Typo="Typo.h6" Class="mb-1">Time to Create Memories</MudText>
                                <MudText Typo="Typo.body2" Style="opacity: 0.9">Every moment is a chance for something special</MudText>
                            </div>
                        </div>
                    }
                    if (i == 12) // –ö–Ω–æ–ø–∫–∞ Explore –ø—ñ—Å–ª—è 12-–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞
                    {
                        <div class="mosaic-button" @onclick="@(() => NavigationManager.NavigateTo("/events"))">
                            <div class="mosaic-button-content">
                                <span class="mosaic-button-icon">‚ú®</span>
                                <MudText Typo="Typo.subtitle2">Explore All Events</MudText>
                                <MudText Typo="Typo.caption" Style="opacity: 0.9">Discover more amazing events</MudText>
                            </div>
                        </div>
                    }
                    if (i == 9) // –ö–Ω–æ–ø–∫–∞ Shuffle –ø—ñ—Å–ª—è 9-–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞
                    {
                        <div class="mosaic-button shuffle-button" @onclick="ShuffleEvents">
                            <div class="mosaic-button-content">
                                <span class="mosaic-button-icon">üé≤</span>
                                <MudText Typo="Typo.subtitle2">Shuffle Events</MudText>
                                <MudText Typo="Typo.caption" Style="opacity: 0.9">Find something new</MudText>
                            </div>
                        </div>
                    }
                    <div class="mosaic-item" @onclick="@(() => NavigateToEventDetails(evt.Id))">
                        <div class="mosaic-content">
                            @if (!string.IsNullOrEmpty(evt.ImageUrl))
                            {
                                <div class="event-image" style="background-image: url(@evt.ImageUrl)"></div>
                            }
                            <div class="event-overlay">
                                <div class="event-info">
                                    <MudText Typo="Typo.h5" Class="event-title">@evt.Title</MudText>
                                    <MudText Typo="Typo.body2" Class="event-date">
                                        <MudIcon Icon="@Icons.Material.Filled.CalendarToday" Size="Size.Small" />
                                        @evt.StartDate.ToLocalTime().ToString("MMM dd, yyyy")
                                    </MudText>
                                    <MudText Typo="Typo.body2" Class="event-location">
                                        <MudIcon Icon="@Icons.Material.Filled.LocationOn" Size="Size.Small" />
                                        @evt.Location
                                    </MudText>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
    </div>

    <EventCalendar Events="@searchResults" OnEventClick="@((evt) => NavigateToEventDetails(evt.Id))" />
</MudContainer>

<style>
    .events-calendar {
        margin: -0.15rem;
        width: calc(100% + 0.3rem);
        padding: 0 !important;
        background: none !important;
    }

    .mosaic-grid {
        display: grid;
        grid-template-columns: repeat(24, 1fr);
        gap: 0.15rem;
        padding: 0.15rem;
        width: 100%;
        max-width: 1600px;
        margin: 0 auto;
    }

    .mosaic-item {
        position: relative;
        border-radius: 8px;
        overflow: hidden;
        cursor: pointer;
        transition: all 0.3s ease;
        aspect-ratio: 1;
    }

    .mosaic-item:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
    }

    .mosaic-item:hover .event-image {
        transform: scale(1.05);
    }

    /* –í–µ–ª–∏–∫–∞ –∫–∞—Ä—Ç–∫–∞ */
    .mosaic-item:nth-child(24n+1) {
        grid-row: span 6;
        grid-column: span 6;
    }
    .mosaic-item:nth-child(24n+1) .event-title {
        font-size: 1.5rem;
        margin-bottom: 0.5rem;
    }
    .mosaic-item:nth-child(24n+1) .event-date,
    .mosaic-item:nth-child(24n+1) .event-location {
        font-size: 1rem;
        margin-bottom: 0.35rem;
    }

    /* –°–µ—Ä–µ–¥–Ω—è –∫–∞—Ä—Ç–∫–∞ */
    .mosaic-item:nth-child(12n+2) {
        grid-row: span 4;
        grid-column: span 4;
    }
    .mosaic-item:nth-child(12n+2) .event-title {
        font-size: 1.2rem;
        margin-bottom: 0.4rem;
    }
    .mosaic-item:nth-child(12n+2) .event-date,
    .mosaic-item:nth-child(12n+2) .event-location {
        font-size: 0.9rem;
    }

    /* –í–∏—Å–æ–∫–∞ –∫–∞—Ä—Ç–∫–∞ */
    .mosaic-item:nth-child(14n+3) {
        grid-row: span 6;
        grid-column: span 4;
    }
    .mosaic-item:nth-child(14n+3) .event-title {
        font-size: 1.3rem;
        margin-bottom: 0.45rem;
    }
    .mosaic-item:nth-child(14n+3) .event-date,
    .mosaic-item:nth-child(14n+3) .event-location {
        font-size: 0.95rem;
    }

    /* –®–∏—Ä–æ–∫–∞ –∫–∞—Ä—Ç–∫–∞ */
    .mosaic-item:nth-child(10n+4) {
        grid-row: span 4;
        grid-column: span 6;
    }
    .mosaic-item:nth-child(10n+4) .event-title {
        font-size: 1.4rem;
        margin-bottom: 0.45rem;
    }
    .mosaic-item:nth-child(10n+4) .event-date,
    .mosaic-item:nth-child(10n+4) .event-location {
        font-size: 0.95rem;
    }

    /* –ú–∞–ª–µ–Ω—å–∫–∞ –∫–∞—Ä—Ç–∫–∞ */
    .mosaic-item:nth-child(4n) {
        grid-row: span 3;
        grid-column: span 3;
    }
    .mosaic-item:nth-child(4n) .event-title {
        font-size: 0.85rem;
        margin-bottom: 0.15rem;
        line-height: 1.2;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
        text-overflow: ellipsis;
    }
    .mosaic-item:nth-child(4n) .event-date,
    .mosaic-item:nth-child(4n) .event-location {
        font-size: 0.7rem;
        margin-bottom: 0.1rem;
        opacity: 0.9;
    }
    .mosaic-item:nth-child(4n) .event-info {
        padding: 0.5rem;
        background: linear-gradient(0deg, rgba(0, 0, 0, 0.9) 0%, rgba(0, 0, 0, 0.6) 100%);
        backdrop-filter: blur(4px);
        -webkit-backdrop-filter: blur(4px);
    }
    .mosaic-item:nth-child(4n) .event-overlay {
        opacity: 0;
        transition: opacity 0.3s ease;
    }
    .mosaic-item:nth-child(4n):hover .event-overlay {
        opacity: 1;
    }
    .mosaic-item:nth-child(4n) .mud-icon-root {
        font-size: 0.7rem !important;
        margin-right: 0.15rem !important;
    }
    .mosaic-item:nth-child(4n) .event-date,
    .mosaic-item:nth-child(4n) .event-location {
        display: inline-flex;
        margin-right: 0.5rem;
    }
    .mosaic-item:nth-child(4n) .event-info {
        transform: translateY(100%);
        transition: transform 0.3s ease;
    }
    .mosaic-item:nth-child(4n):hover .event-info {
        transform: translateY(0);
    }
    .mosaic-item:nth-child(4n) .event-image {
        transform: scale(1.1);
    }
    .mosaic-item:nth-child(4n):hover .event-image {
        transform: scale(1);
    }

    @@media (max-width: 600px) {
        .mosaic-item:nth-child(4n) .event-info {
            transform: translateY(0);
            background: linear-gradient(0deg, rgba(0, 0, 0, 0.8) 0%, rgba(0, 0, 0, 0.4) 100%);
        }
        .mosaic-item:nth-child(4n) .event-overlay {
            opacity: 1;
        }
        .mosaic-item:nth-child(4n) .event-image {
            transform: scale(1);
        }
    }

    .mosaic-text, .mosaic-button {
        grid-row: span 4;
        grid-column: span 4;
    }

    .mosaic-text {
        background: linear-gradient(135deg, #FF6B6B 0%, #FF8E53 100%);
        border-radius: 8px;
        padding: 1rem;
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        text-align: center;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .mosaic-text:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
    }

    .mosaic-text-content {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 0.5rem;
    }

    .mosaic-text-icon {
        font-size: 2rem;
        margin-bottom: 0.25rem;
    }

    .mosaic-button {
        display: flex;
        align-items: center;
        justify-content: center;
        background: linear-gradient(135deg, var(--mud-palette-primary) 0%, var(--mud-palette-primary-darken) 100%);
        border-radius: 8px;
        padding: 1rem;
        color: white;
        text-align: center;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .mosaic-button:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
    }

    .mosaic-button-content {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 0.5rem;
    }

    .mosaic-button-icon {
        font-size: 1.75rem;
        margin-bottom: 0.25rem;
    }

    .shuffle-button {
        background: linear-gradient(135deg, #4A90E2 0%, #967ADC 100%);
    }

    .shuffle-button:hover {
        animation: shake 0.5s ease-in-out;
    }

    .mosaic-text-content h6 {
        font-size: 1.3rem !important;
        margin-bottom: 0.4rem !important;
    }

    .mosaic-text-content .mud-typography-body2 {
        font-size: 0.9rem !important;
    }

    .mosaic-button-content .mud-typography-subtitle2 {
        font-size: 1.1rem !important;
        margin-bottom: 0.2rem !important;
    }

    .mosaic-button-content .mud-typography-caption {
        font-size: 0.8rem !important;
    }

    .event-image {
        width: 100%;
        height: 100%;
        background-size: cover;
        background-position: center;
        transition: transform 0.3s ease;
    }

    .event-overlay {
        position: absolute;
        bottom: 0;
        left: 0;
        right: 0;
        background: linear-gradient(0deg, rgba(0, 0, 0, 0.8) 0%, rgba(0, 0, 0, 0.4) 50%, rgba(0, 0, 0, 0) 100%);
    }

    .event-info {
        padding: 0.75rem;
        position: relative;
        z-index: 1;
        color: white;
    }

    .event-title {
        font-size: 1rem;
        font-weight: bold;
        margin-bottom: 0.35rem;
        text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
    }

    .event-date, .event-location {
        display: flex;
        align-items: center;
        gap: 0.35rem;
        font-size: 0.8rem;
        margin-bottom: 0.25rem;
        text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
    }

    @@keyframes shake {
        0% { transform: rotate(0deg); }
        25% { transform: rotate(-5deg); }
        50% { transform: rotate(5deg); }
        75% { transform: rotate(-5deg); }
        100% { transform: rotate(0deg); }
    }

    @@media (max-width: 1400px) {
        .mosaic-grid {
            grid-template-columns: repeat(16, 1fr);
        }
        
        .mosaic-item:nth-child(24n+1) .event-title { font-size: 1.3rem; }
        .mosaic-item:nth-child(24n+1) .event-date,
        .mosaic-item:nth-child(24n+1) .event-location { font-size: 0.9rem; }

        .mosaic-item:nth-child(12n+2) .event-title { font-size: 1.1rem; }
        .mosaic-item:nth-child(12n+2) .event-date,
        .mosaic-item:nth-child(12n+2) .event-location { font-size: 0.85rem; }

        .mosaic-text-content h6 { font-size: 1.1rem !important; }
        .mosaic-text-content .mud-typography-body2 { font-size: 0.85rem !important; }
        .mosaic-button-content .mud-typography-subtitle2 { font-size: 1rem !important; }
        .mosaic-button-content .mud-typography-caption { font-size: 0.75rem !important; }
    }

    @@media (max-width: 960px) {
        .mosaic-grid {
            grid-template-columns: repeat(12, 1fr);
        }

        .mosaic-item:nth-child(24n+1) .event-title { font-size: 1.2rem; }
        .mosaic-item:nth-child(24n+1) .event-date,
        .mosaic-item:nth-child(24n+1) .event-location { font-size: 0.85rem; }

        .mosaic-item:nth-child(12n+2) .event-title { font-size: 1rem; }
        .mosaic-item:nth-child(12n+2) .event-date,
        .mosaic-item:nth-child(12n+2) .event-location { font-size: 0.8rem; }

        .mosaic-text-content h6 { font-size: 1rem !important; }
        .mosaic-text-content .mud-typography-body2 { font-size: 0.8rem !important; }
        .mosaic-button-content .mud-typography-subtitle2 { font-size: 0.9rem !important; }
        .mosaic-button-content .mud-typography-caption { font-size: 0.7rem !important; }
    }

    @@media (max-width: 600px) {
        .mosaic-grid {
            grid-template-columns: repeat(6, 1fr);
            gap: 0.1rem;
        }
        .events-calendar {
            margin: -0.1rem;
            width: calc(100% + 0.2rem);
        }

        .event-title { font-size: 0.9rem !important; }
        .event-date, .event-location { font-size: 0.75rem !important; }

        .mosaic-text-content h6 { font-size: 0.9rem !important; }
        .mosaic-text-content .mud-typography-body2 { font-size: 0.75rem !important; }
        .mosaic-button-content .mud-typography-subtitle2 { font-size: 0.85rem !important; }
        .mosaic-button-content .mud-typography-caption { font-size: 0.65rem !important; }
    }
</style>

@code {
    private List<Event> events = new();
    private List<Event> searchResults = new();
    private string searchQuery = "";
    private bool isLoading = false;

    protected override async Task OnInitializedAsync()
    {
        await LoadEvents();
    }

    private async Task LoadEvents()
    {
        try
        {
            isLoading = true;
            events = await EventService.GetEventsAsync();
            searchResults = events;
        }
        catch (Exception ex)
        {
            Snackbar.Add("Failed to load events", Severity.Error);
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }

    private string GetRandomPosition()
    {
        var random = new Random();
        var top = random.Next(-20, 21); // –≤—ñ–¥ -20 –¥–æ +20
        var left = random.Next(-20, 21);
        var rotate = random.Next(-10, 11); // –≤—ñ–¥ -10 –¥–æ +10 –≥—Ä–∞–¥—É—Å—ñ–≤
        var scale = 0.95 + random.NextDouble() * 0.1; // –≤—ñ–¥ 0.95 –¥–æ 1.05

        return $"transform: translate({left}px, {top}px) rotate({rotate}deg) scale({scale:F2});";
    }

    private async Task HandleSearch()
    {
        if (string.IsNullOrWhiteSpace(searchQuery))
            return;

        NavigationManager.NavigateTo($"/events?q={Uri.EscapeDataString(searchQuery)}");
    }

    private void NavigateToEventDetails(int eventId)
    {
        NavigationManager.NavigateTo($"/event/{eventId}");
    }

    private async Task ShuffleEvents()
    {
        var allEvents = await EventService.GetEventsAsync();
        searchResults = allEvents.OrderBy(x => Guid.NewGuid()).ToList();
        StateHasChanged();
    }
}
