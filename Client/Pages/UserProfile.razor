@page "/profile"
@using VentyTime.Shared.Models
@using VentyTime.Shared.Models.Auth
@using VentyTime.Client.Services
@using MudBlazor
@inject IAuthService AuthService
@inject IUserService UserService
@inject IEventService EventService
@inject NavigationManager NavigationManager
@attribute [Authorize]

<div class="profile-container">
    <div class="profile-header">
        <div class="profile-avatar-container">
            @if (user != null)
            {
                <div class="d-flex flex-column align-items-center">
                    <div class="mb-4">
                        <MudAvatar Size="Size.Large" Style="width: 128px; height: 128px;">
                            @if (!string.IsNullOrEmpty(user.AvatarUrl))
                            {
                                <img src="@user.AvatarUrl" alt="@user.FullName" />
                            }
                            else
                            {
                                <MudIcon Icon="@Icons.Material.Filled.Person" Size="Size.Large" />
                            }
                        </MudAvatar>
                    </div>

                    <MudText Typo="Typo.h4" Class="mb-4">@user.FullName</MudText>

                    <MudTabs Class="mt-4" Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6">
                        <MudTabPanel Text="Organized Events">
                            @if (user.OrganizedEvents?.Any() == true)
                            {
                                <div class="d-flex flex-wrap gap-4">
                                    @foreach (var eventId in user.OrganizedEvents)
                                    {
                                        <EventCard EventId="@eventId.Id.ToString()" />
                                    }
                                </div>
                            }
                            else
                            {
                                <MudText>No organized events yet.</MudText>
                            }
                        </MudTabPanel>

                        <MudTabPanel Text="Registered Events">
                            @if (user.Registrations?.Any() == true)
                            {
                                <div class="d-flex flex-wrap gap-4">
                                    @foreach (var registration in user.Registrations)
                                    {
                                        <EventCard EventId="@registration.EventId.ToString()" />
                                    }
                                </div>
                            }
                            else
                            {
                                <MudText>No registered events yet.</MudText>
                            }
                        </MudTabPanel>
                    </MudTabs>
                </div>
            }
        </div>
    </div>

    @if (loading)
    {
        <div class="text-center mt-4">
            <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
        </div>
    }
    else if (user == null)
    {
        <MudAlert Severity="Severity.Error" Class="mt-4">Unable to load user profile.</MudAlert>
    }
</div>

<style>
    .profile-container {
        width: 100%;
    }

    .profile-header {
        background: linear-gradient(90deg, #9C27B0 0%, #E91E63 100%);
        height: 200px;
        position: relative;
        margin-bottom: 80px;
    }

    .profile-avatar-container {
        position: absolute;
        bottom: -60px;
        left: 50px;
    }

    .profile-avatar, .profile-avatar-placeholder {
        width: 120px;
        height: 120px;
        border-radius: 50%;
        border: 4px solid white;
        background: #f5f5f5;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 2.5rem;
        color: #757575;
    }

    .profile-content {
        padding: 0 50px;
    }

    .profile-info {
        margin-bottom: 40px;
    }

    .bio {
        color: #666;
        margin: 15px 0;
    }

    .contact-info {
        margin: 20px 0;
    }

    .contact-info div {
        display: flex;
        align-items: center;
        gap: 10px;
        margin: 8px 0;
        color: #666;
    }

    .event-item {
        display: flex;
        align-items: center;
        gap: 12px;
        padding: 12px;
        border-bottom: 1px solid #eee;
    }

    .event-date, .event-popularity {
        margin-left: auto;
        color: #666;
        font-size: 0.9rem;
    }

    .settings-options {
        max-width: 600px;
    }

    .settings-options .mud-button {
        width: 100%;
        justify-content: flex-start;
    }
</style>

@code {
    private bool loading = true;
    private ApplicationUser? user;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            user = await UserService.GetUserProfileAsync();
        }
        finally
        {
            loading = false;
        }
    }

    private async Task HandleLogout()
    {
        await AuthService.LogoutAsync();
        NavigationManager.NavigateTo("/");
    }
}
